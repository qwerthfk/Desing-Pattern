* Adapter 디자인 패턴

  어댑터는 개조시키는 것이라는 의미.
  예를들면, AC 어댑터는 
            직류 12볼트의 컴퓨터를 교류 100볼트의 환경에 맞게 바꾸는 것이다.
  
  Adapter 패턴에는 클래스에 의한 Adapter 패턴(상속 사용)
                   인스턴스에 의한 Adapter 패턴(위임 사용) 이 있다.
  
  PrintBannerAdapter는 상속을 사용한 Adapter 패턴이다.
  PrintBannerAdapter2는 위임을 사용한 Adapter 패턴이다.



 * Adapter 패턴의 등장인물
    - Target(대상)의 역할
        지금 필요한 method를 결정(노트북을 작동시키기 위한 직류 12볼트 해당)
        Print 인터페이스/클래스가 이 역할.
  
    - Client(의뢰자)의 역할
        Target 역할의 method를 사용해서 일을 한다. 
        직류 12볼트로 움직이는 노트북에 해당(Main 클래스가 이 역할)

    - Adaptee(개조되는 쪽)의 역할
        이미 준비되어 있는 메소드를 가지고 있는 역할.
        교류 100볼트의 AC전원에 해당(Banner 클래스가 이 역할)
 
    - Adapter의 역할
        Adaptee 역할의 method를 사용해서 Target 역할을 만족시키기 위한 것.
        PrintBanner 클래스가 이 역할.




* Adapter 패턴을 사용하는 이유

  이미 존재하는 클래스를 이용하는 경우가 자주 있다. 
  특히 그 클래스가 충분한 테스트를 받아 버그가 적으며 실제로 지금까지 사용된
  실적이 있다면 어떻게든 그 클래스를 부품으로 재이용하고 싶을 것이다.
  
  Adapter 패턴은 기존의 클래스를 개조해서 필요한 클래스를 만든다.
  이 패턴으로 필요한 메소드를 발빠르게 만들 수 있다.
  만약, 버그가 발생해도 기존의 클래스(Adaptee)에는 버그가 없으므로 Adapter 역할
        클래스를 중점적으로 조사하면 되고, 프로그램 검사도 상당히 쉬워진다.
        
        
        
        